<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="en"
lang="en"
xmlns="http://www.w3.org/1999/xhtml"
xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Python for Algorithmic Trading Cookbook</title>
<link rel="stylesheet" type="text/css" href="override_v1.css"/>
<link rel="stylesheet" type="text/css" href="css/explorer-css-sk.css"/>
</head>
<body>
<div id="book-content">
<div id="sbo-rt-content"><div id="_idContainer004">
			<h1 id="_idParaDest-5"><a id="_idTextAnchor004"></a>Preface</h1>
			<p>Algorithmic trading is the art of using statistical models, programming, and math to trade financial assets. With the vast volumes of data available in today’s markets, it is essential to have powerful tools at your disposal to remain competitive. In <em class="italic">Python for Algorithmic Trading Cookbook</em>, you’ll get code to design, backtest, and deploy your own algorithmic trading strategies with Python. Python is not only accessible and easy to learn, but also boasts thousands of powerful libraries that can help you implement sophisticated <span class="No-Break">trading strategies.</span></p>
			<p>Many resources available today cover basic trading strategies largely focused on technical analysis. Unfortunately, these strategies often fail over the long run. This book aims to bring professional techniques and tools to non-professionals through small, digestible recipes. These recipes will not only guide you in creating, testing, and deploying algorithmic trading strategies, but build a strong foundation in the tools and techniques to prepare for creating, testing, and deploying algorithmic <span class="No-Break">trading strategies.</span></p>
			<p>In this book, I will share insights and methodologies drawn from my 20+ years of experience in algorithmic trading and Python programming. I have taught the techniques presented in this book to over 1,000+ students in my course, <em class="italic">Getting Started with Python for Quant Finance</em>. The course has been praised for its practical application of Python to algorithmic trading. Whether you are a seasoned programmer looking to expand into trading or a trader aiming to enhance your technical skills, this book is built to provide you with the tools and knowledge <span class="No-Break">you need.</span></p>
			<p>With Python, you can easily access financial data, perform complex calculations, and backtest your models efficiently. This book will guide you through the entire process, from setting up your Python environment to implementing advanced <span class="No-Break">trading algorithms.</span></p>
			<p>By the end of this journey, you will have a robust toolkit to develop and refine your own trading strategies. As the financial markets evolve, so too must our approaches. With the right knowledge and tools, you can navigate these changes and find opportunities that others <span class="No-Break">might miss.</span></p>
			<h1 id="_idParaDest-6"><a id="_idTextAnchor005"></a>Who this book is for</h1>
			<p>Traders, investors, and Python developers can gain practical insights into designing, backtesting, and deploying algorithmic trading strategies from this book. The three main personas who are the target audience of this content are <span class="No-Break">as follows:</span></p>
			<p>Active traders and investors: Individuals who are already investing in the stock market and want to leverage algorithmic strategies to enhance their trading performance. They will learn to use Python to develop, test, and implement advanced trading models, including acquiring and processing freely available market data with OpenBB and building a research environment populated with financial <span class="No-Break">market data.</span></p>
			<p>Python developers with market interest: Developers with a solid understanding of Python data structures and libraries, such as pandas, who are looking to apply their programming skills to the financial markets. This book will help them bridge the gap between coding and trading by providing practical recipes and techniques used in algorithmic trading. They will learn to identify alpha factors, engineer them into signals, and use VectorBT for walk-forward optimization to find <span class="No-Break">strategy parameters.</span></p>
			<p>Aspiring algorithmic traders: For those who aspire to enter the field of algorithmic trading and have basic experience in Python programming, this book will provide them with the foundational knowledge and tools to start designing and deploying their trading strategies. They will learn to build production-ready backtests with Zipline, evaluate factor performance, set up the code framework to connect and send orders to Interactive Brokers, and deploy trading strategies to a live trading environment using the <span class="No-Break">IB API.</span></p>
			<p>This book will equip you with the skills to acquire and analyze financial data and build and refine algorithmic trading strategies using Python. Whether you are an experienced market participant looking to enhance your technical capabilities or a Python programmer with a keen interest in the financial markets, this book provides actionable insights and techniques to succeed in <span class="No-Break">algorithmic trading.</span></p>
			<h1 id="_idParaDest-7"><a id="_idTextAnchor006"></a>What this book covers</h1>
			<p><a href="B21323_01.xhtml#_idTextAnchor013"><span class="No-Break"><em class="italic">Chapter 1</em></span></a>,<em class="italic"> Acquire Free Financial Market Data with Cutting-edge Python Libraries</em>, provides an in-depth exploration of acquiring various types of financial market data. You will learn to work with stock market, historic futures, and options market data using the OpenBB Platform, and harness factor data <span class="No-Break">using pandas-datareader.</span></p>
			<p><a href="B21323_02.xhtml#_idTextAnchor040"><span class="No-Break"><em class="italic">Chapter 2</em></span></a>, <em class="italic">Analyze and Transform Financial Market Data with pandas</em>, dives into the powerful pandas library for data manipulation. This chapter explains pandas index types, building series and DataFrames, and transforming data. You will learn to calculate asset returns, measure volatility, generate cumulative returns, resample data, address missing data issues, and apply custom functions to analyze time <span class="No-Break">series data.</span></p>
			<p><a href="B21323_03.xhtml#_idTextAnchor099"><span class="No-Break"><em class="italic">Chapter 3</em></span></a>, <em class="italic">Visualize Financial Market Data with Matplotlib, Seaborn, and Plotly Dash</em>, covers techniques for visualizing financial data. You will quickly visualize data using pandas, animate yield curve evolution with Matplotlib, plot options implied volatility surfaces, visualize statistical relationships with Seaborn, and create an interactive PCA analytics dashboard with <span class="No-Break">Plotly Dash.</span></p>
			<p><a href="B21323_04.xhtml#_idTextAnchor129"><span class="No-Break"><em class="italic">Chapter 4</em></span></a>, <em class="italic">Store Financial Market Data on Your Computer</em>, discusses methods for efficiently storing financial data. You will learn to store data in CSV format, SQLite, a networked Postgres database, and the ultra-fast HDF5 format, ensuring your data is easily accessible and well organized for analysis <span class="No-Break">and backtesting.</span></p>
			<p><a href="B21323_05.xhtml#_idTextAnchor155"><span class="No-Break"><em class="italic">Chapter 5</em></span></a>, <em class="italic">Build Alpha Factors for Stock Portfolios</em>, focuses on creating alpha factors. It covers identifying latent return drivers with principal component analysis, hedging portfolio beta using linear regression, analyzing portfolio sensitivities to Fama-French factors, assessing market inefficiency based on volatility, and preparing a factor ranking model using <span class="No-Break">Zipline pipelines.</span></p>
			<p><a href="B21323_06.xhtml#_idTextAnchor186"><span class="No-Break"><em class="italic">Chapter 6</em></span></a>, <em class="italic">Vector-Based Backtesting with VectorBT</em>, introduces vector-based backtesting. This chapter guides you through experimenting with millions of strategy combinations, conducting walk-forward optimization, and implementing a risk parity backtest using VectorBT, providing a robust framework for <span class="No-Break">strategy evaluation.</span></p>
			<p><a href="B21323_07.xhtml#_idTextAnchor207"><span class="No-Break"><em class="italic">Chapter 7</em></span></a>, <em class="italic">Event-Based Backtesting Factor Portfolios with Zipline Reloaded</em>, explores event-based backtesting. You will backtest a momentum factor strategy and explore a mean reversion strategy using Zipline Reloaded, helping you understand the dynamics and performance of various <span class="No-Break">trading strategies.</span></p>
			<p><a href="B21323_08.xhtml#_idTextAnchor225"><span class="No-Break"><em class="italic">Chapter 8</em></span></a>, <em class="italic">Evaluate Factor Risk and Performance with Alphalens Reloaded</em>, examines factor risk and performance. You will prepare backtest results, evaluate the information coefficient, examine factor return performance, and evaluate factor turnover, ensuring a comprehensive analysis of your <span class="No-Break">trading strategies.</span></p>
			<p><a href="B21323_09.xhtml#_idTextAnchor250"><span class="No-Break"><em class="italic">Chapter 9</em></span></a>, <em class="italic">Assess Backtest Risk and Performance Metrics with Pyfolio</em>, covers risk and performance assessment. This chapter explains preparing Zipline backtest results for pyfolio, generating strategy performance analytics, building a drawdown and rolling risk analysis, analyzing strategy holdings, leverage, exposure, sector allocations, and breaking down performance to the <span class="No-Break">trade level.</span></p>
			<p><a href="B21323_10.xhtml#_idTextAnchor282"><span class="No-Break"><em class="italic">Chapter 10</em></span></a>, <em class="italic">Set Up the Interactive Brokers Python API</em>, provides a guide to building an algorithmic trading app. You will create contract and order objects with the IB API, fetch historical market data, get market data snapshots, stream live tick data, and store live tick data in a local SQL database, enabling real-time trading and <span class="No-Break">data management.</span></p>
			<p><a href="B21323_11.xhtml#_idTextAnchor327"><span class="No-Break"><em class="italic">Chapter 11</em></span></a>, <em class="italic">Manage Orders, Positions, and Portfolios with the IB API</em>, explains managing trades and portfolios. You will learn to execute orders, manage placed orders, get portfolio details, inspect positions, and compute portfolio profit and loss, providing comprehensive tools to manage your <span class="No-Break">trading operations.</span></p>
			<p><a href="B21323_12.xhtml#_idTextAnchor360"><span class="No-Break"><em class="italic">Chapter 12</em></span></a>, <em class="italic">Deploy Strategies to a Live Environment</em>, focuses on live trading strategy deployment. This chapter covers calculating real-time performance and risk indicators, sending orders based on portfolio targets, and deploying monthly factor, options combo, and intraday multi-asset mean reversion strategies, ensuring your strategies are effective and responsive in <span class="No-Break">live markets.</span></p>
			<p><a href="B21323_13.xhtml#_idTextAnchor393"><span class="No-Break"><em class="italic">Chapter 13</em></span></a>, <em class="italic">Advanced Recipes for Market Data and Strategy Management</em>, offers advanced techniques for managing market data and strategies. You will learn to stream real-time options data with ThetaData, use the ArcticDB DataFrame database for tick storage, trigger real-time risk limit alerts, and store trade execution details in a SQL database, enhancing your data management and strategy <span class="No-Break">implementation capabilities.</span></p>
			<h1 id="_idParaDest-8"><a id="_idTextAnchor007"></a>To get the most out of this book</h1>
			<p>You will need Python version 3.10 to work with the examples in this book. Ideally, you will install Python using the Anaconda distribution. All code examples have been tested using Python version 3.10 on macOS with an <span class="No-Break">M2 chip.</span></p>
			<table id="table001" class="No-Table-Style">
				<colgroup>
					<col/>
					<col/>
				</colgroup>
				<tbody>
					<tr class="No-Table-Style">
						<td class="No-Table-Style">
							<p><strong class="bold">Software/hardware covered in </strong><span class="No-Break"><strong class="bold">the book</strong></span></p>
						</td>
						<td class="No-Table-Style">
							<p><strong class="bold">Operating </strong><span class="No-Break"><strong class="bold">system requirements</strong></span></p>
						</td>
					</tr>
					<tr class="No-Table-Style">
						<td class="No-Table-Style">
							<p>Python <span class="No-Break">version 3.10</span></p>
						</td>
						<td class="No-Table-Style">
							<p>Windows, macOS, <span class="No-Break">or Linux</span></p>
						</td>
					</tr>
					<tr class="No-Table-Style">
						<td class="No-Table-Style">
							<p>pandas <span class="No-Break">version 2+</span></p>
						</td>
						<td class="No-Table-Style"></td>
					</tr>
					<tr class="No-Table-Style">
						<td class="No-Table-Style">
							<p>OpenBB Platform <span class="No-Break">version 4+</span></p>
						</td>
						<td class="No-Table-Style"></td>
					</tr>
					<tr class="No-Table-Style">
						<td class="No-Table-Style">
							<p><span class="No-Break">PostgreSQL</span></p>
						</td>
						<td class="No-Table-Style"></td>
					</tr>
				</tbody>
			</table>
			<p><em class="italic">Where necessary, specific installation instructions are included in the </em><span class="No-Break"><em class="italic">given chapters.</em></span></p>
			<p><strong class="bold">If you are using the digital version of this book, we advise you to type the code yourself or access the code from the book’s GitHub repository (a link is available in the next section). Doing so will help you avoid any potential errors related to the copying and pasting </strong><span class="No-Break"><strong class="bold">of code.</strong></span></p>
			<h1 id="_idParaDest-9"><a id="_idTextAnchor008"></a>Download the example code files</h1>
			<p>You can download the example code files for this book from GitHub at <a href="https://github.com/PacktPublishing/Algorithmic-Trading-with-Python-Cookbook">https://github.com/PacktPublishing/Algorithmic-Trading-with-Python-Cookbook</a>. If there’s an update to the code, it will be updated in the <span class="No-Break">GitHub repository.</span></p>
			<p>We also have other code bundles from our rich catalog of books and videos available at <a href="https://github.com/PacktPublishing/">https://github.com/PacktPublishing/</a>. Check <span class="No-Break">them out!</span></p>
			<h1 id="_idParaDest-10"><a id="_idTextAnchor009"></a>Conventions used</h1>
			<p>There are a number of text conventions used throughout <span class="No-Break">this book.</span></p>
			<p><strong class="source-inline">Code in text</strong>: Indicates code words in text, database table names, folder names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles. Here is an example: “<strong class="source-inline">save_data_range</strong> uses the pandas <strong class="source-inline">to_csv</strong> method to store the data to disk using GZIP compression in the <span class="No-Break">CSV format.”</span></p>
			<p>A block of code is set <span class="No-Break">as follows:</span></p>
			<pre class="source-code">
import datetime as dt
import pandas as pd
from openbb_terminal.sdk import openbb</pre>			<p>Any command-line input or output is written <span class="No-Break">as follows:</span></p>
			<pre class="console">
pip install thetadata</pre>			<p><strong class="bold">Bold</strong>: Indicates a new term, an important word, or words that you see onscreen. For instance, words in menus or dialog boxes appear in <strong class="bold">bold</strong>. Here is an example: “In the <strong class="bold">Actions</strong> pane, click on <strong class="bold">Create </strong><span class="No-Break"><strong class="bold">Basic Task</strong></span><span class="No-Break">.”</span></p>
			<p class="callout-heading">Tips or important notes</p>
			<p class="callout">Appear like this.</p>
			<h1 id="_idParaDest-11"><a id="_idTextAnchor010"></a>Get in touch</h1>
			<p>Feedback from our readers is <span class="No-Break">always welcome.</span></p>
			<p><strong class="bold">General feedback</strong>: If you have questions about any aspect of this book, email us at <a href="mailto:customercare%40packtpub.com?subject=">customercare@packtpub.com</a> and mention the book title in the subject of <span class="No-Break">your message.</span></p>
			<p><strong class="bold">Errata</strong>: Although we have taken every care to ensure the accuracy of our content, mistakes do happen. If you have found a mistake in this book, we would be grateful if you would report this to us. Please visit <a href="http://www.packtpub.com/support/errata">www.packtpub.com/support/errata</a> and fill in <span class="No-Break">the form.</span></p>
			<p><strong class="bold">Piracy</strong>: If you come across any illegal copies of our works in any form on the internet, we would be grateful if you would provide us with the location address or website name. Please contact us at <a href="mailto:copyright%40packt.com?subject=">copyright@packt.com</a> with a link to <span class="No-Break">the material.</span></p>
			<p><strong class="bold">If you are interested in becoming an author</strong>: If there is a topic that you have expertise in and you are interested in either writing or contributing to a book, please <span class="No-Break">visit </span><a href="http://authors.packtpub.com"><span class="No-Break">authors.packtpub.com</span></a><span class="No-Break">.</span></p>
			<h1 id="_idParaDest-12"><a id="_idTextAnchor011"></a>Share Your Thoughts</h1>
			<p>Once you’ve read <em class="italic">Python for Algorithmic Trading Cookbook</em>, we’d love to hear your thoughts! <a href="https://packt.link/r/1-835-08470-2">Please click here to go straight to the Amazon review page for this book and share <span class="No-Break">your feedback</span></a><span class="No-Break">.</span></p>
			<p>Your review is important to us and the tech community and will help us make sure we’re delivering excellent <span class="No-Break">quality content.</span></p>
			<h1 id="_idParaDest-13"><a id="_idTextAnchor012"></a>Download a free PDF copy of this book</h1>
			<p>Thanks for purchasing <span class="No-Break">this book!</span></p>
			<p>Do you like to read on the go but are unable to carry your print <span class="No-Break">books everywhere?</span></p>
			<p>Is your eBook purchase not compatible with the device of <span class="No-Break">your choice?</span></p>
			<p>Don’t worry, now with every Packt book you get a DRM-free PDF version of that book at <span class="No-Break">no cost.</span></p>
			<p>Read anywhere, any place, on any device. Search, copy, and paste code from your favorite technical books directly into <span class="No-Break">your application.</span></p>
			<p>The perks don’t stop there, you can get exclusive access to discounts, newsletters, and great free content in your <span class="No-Break">inbox daily</span></p>
			<p>Follow these simple steps to get <span class="No-Break">the benefits:</span></p>
			<ol>
				<li>Scan the QR code or visit the <span class="No-Break">link below</span></li>
			</ol>
			<div>
				<div id="_idContainer003" class="IMG---Figure">
					<img src="image/B21323_QR_Free_PDF.jpg" alt="" role="presentation" width="200" height="200"/>
				</div>
			</div>
			<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><a href="https://packt.link/free-ebook/9781835084700">https://packt.link/free-ebook/9781835084700</a></p>
			<ol>
				<li value="2">Submit your proof <span class="No-Break">of purchase</span></li>
				<li>That’s it! We’ll send your free PDF and other benefits to your <span class="No-Break">email directly</span></li>
			</ol>
		</div>
		<div>
			<div id="_idContainer005" class="Basic-Text-Frame">
			</div>
		</div>
		<div>
			<div id="_idContainer006" class="Basic-Text-Frame">
			</div>
		</div>
	</div>
</div>
</body>
</html>